k++ADF : SAT-based Reasoner for Ab足stract Dia足lect足ical Frame足works
---------------------------------------------------------------
Version 2018-07-06


To compile the program:

cd src
make


To remove all object files:

cd src
make clean


USAGE: ./k++adf <sem> [options] <file>

COMMAND LINE ARGUMENTS:
<file>  : Input filename for ADF instance.
<sem>   : ADF semantics. <sem>={cf|nai|adm|com|prf|grd}

COMMAND LINE OPTIONS:
-a <arg>: Query argument for acceptance problems.
-c      : Credulous acceptance. Requires the usage of -a flag.
-s      : Skeptical acceptance. Requires the usage of -a flag.
-l      : Output link types (att and sup).
-f      : Do not use k-bipolar encodings.
-n      : Do not use shortcuts for skeptical acceptance.
-h      : Display this help message.
-v      : Display the version of the program.


Currently, k++ADF supports solving credulous and skeptical acceptance, as well as enumerating all interpretations,
under the conflict-free, naive, admissible, complete, preferred, and grounded semantics.

The underlying SAT solver, MiniSAT 2.2.0, is included in this release.

Please direct any questions, comments, bug reports etc. to
andreas.niskanen@helsinki.fi

Please use the following reference for k++ADF:

Novel Algorithms for Abstract Dialectical Frameworks based on Complexity Analysis of Subclasses and SAT Solving.
Thomas Linsbichler, Marco Maratea, Andreas Niskanen, Johannes P. Wallner, and Stefan Woltran.
In ???, editors, Proceedings of the 27th International Joint Conference on Artificial Intelligence and the 23rd European Conference on Artificial Intelligence (IJCAI-ECAI 2018), pages ???-???. ijcai.org, 2018. Derp
